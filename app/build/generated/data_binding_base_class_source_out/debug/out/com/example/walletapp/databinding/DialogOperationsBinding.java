// Generated by view binder compiler. Do not edit!
package com.example.walletapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.walletapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogOperationsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button btnDeposit;

  @NonNull
  public final Button btnFuturePurchases;

  @NonNull
  public final Button btnNewPurchase;

  @NonNull
  public final Button btnStats;

  @NonNull
  public final Button btnTransferInvest;

  @NonNull
  public final Button btnViewPurchases;

  @NonNull
  public final CardView dialogCard;

  @NonNull
  public final FrameLayout overlay;

  private DialogOperationsBinding(@NonNull FrameLayout rootView, @NonNull Button btnDeposit,
      @NonNull Button btnFuturePurchases, @NonNull Button btnNewPurchase, @NonNull Button btnStats,
      @NonNull Button btnTransferInvest, @NonNull Button btnViewPurchases,
      @NonNull CardView dialogCard, @NonNull FrameLayout overlay) {
    this.rootView = rootView;
    this.btnDeposit = btnDeposit;
    this.btnFuturePurchases = btnFuturePurchases;
    this.btnNewPurchase = btnNewPurchase;
    this.btnStats = btnStats;
    this.btnTransferInvest = btnTransferInvest;
    this.btnViewPurchases = btnViewPurchases;
    this.dialogCard = dialogCard;
    this.overlay = overlay;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogOperationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogOperationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_operations, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogOperationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeposit;
      Button btnDeposit = ViewBindings.findChildViewById(rootView, id);
      if (btnDeposit == null) {
        break missingId;
      }

      id = R.id.btnFuturePurchases;
      Button btnFuturePurchases = ViewBindings.findChildViewById(rootView, id);
      if (btnFuturePurchases == null) {
        break missingId;
      }

      id = R.id.btnNewPurchase;
      Button btnNewPurchase = ViewBindings.findChildViewById(rootView, id);
      if (btnNewPurchase == null) {
        break missingId;
      }

      id = R.id.btnStats;
      Button btnStats = ViewBindings.findChildViewById(rootView, id);
      if (btnStats == null) {
        break missingId;
      }

      id = R.id.btnTransferInvest;
      Button btnTransferInvest = ViewBindings.findChildViewById(rootView, id);
      if (btnTransferInvest == null) {
        break missingId;
      }

      id = R.id.btnViewPurchases;
      Button btnViewPurchases = ViewBindings.findChildViewById(rootView, id);
      if (btnViewPurchases == null) {
        break missingId;
      }

      id = R.id.dialogCard;
      CardView dialogCard = ViewBindings.findChildViewById(rootView, id);
      if (dialogCard == null) {
        break missingId;
      }

      FrameLayout overlay = (FrameLayout) rootView;

      return new DialogOperationsBinding((FrameLayout) rootView, btnDeposit, btnFuturePurchases,
          btnNewPurchase, btnStats, btnTransferInvest, btnViewPurchases, dialogCard, overlay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
